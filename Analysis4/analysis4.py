# -*- coding: utf-8 -*-
"""Analysis4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kTR77mJjyVZOVFJN1QlhNVXSalz1FODu

**Analysis 4**

Univariate Analysis
"""

# Commented out IPython magic to ensure Python compatibility.
# imports
import numpy as np
import pandas as pd
pd.set_option('display.max_columns', 40)
import matplotlib.pyplot as plt
import matplotlib.gridspec as gridspec
import seaborn as sns
# %matplotlib inline
sns.set_style('darkgrid')
import plotly.express as px
from sklearn.cluster import KMeans
import warnings
warnings.filterwarnings('ignore');

df = pd.read_csv("CARSSSS.csv")
# to display the top 5 rows
df.head(5)

df.tail(5)

"""**Checking the type of data**

"""

df.dtypes

"""**Dropping the duplicate rows**"""

duplicate_rows_df = df[df.duplicated()]
print("number of duplicate rows: ", duplicate_rows_df.shape)

"""**Now lets remove the duplicate data because its ok to remove them**"""

df.count()   #used to count the number of rows

df = df.drop_duplicates()
df.head(5)

df.count()

"""**Dropping the missing or null values**"""

print(df.isnull().sum())

df = df.dropna()    # Dropping the missing values.
df.count()

print(df.isnull().sum())   # After dropping the values

"""Converting the object values to integer type.

While having a look at the data, the Price was stored as an object type. This is a serious problem because it is impossible to plot those values on a graph because it is a primary requirement that during plotting a graph all the values must be of type integer data. The author has stored, the Price in a different format (Rs2,34,000) so I had to remove the formatting and then convert them to an integer.
"""

# Removing the formatting
df['Price'] = df['Price'].astype(str)
df['Price'] = [x.replace('Rs',' ') for x in df['Price']]
df['Price'] = [x.replace(',', '') for x in df['Price']]

df['Price']=pd.to_numeric(df['Price'],errors='coerce')

"""Univariant Analysis"""

df[['Cylinders','Displacement','Wheelbase','Fuel_Tank_Capacity','Power','Price']].hist(figsize=(10,8),bins=6,color='Y')
# 2 plt.figure(figsize=(10,8))
plt.tight_layout()
plt.show()

import seaborn as sns
corr = df.corr()
plt.figure(figsize=(20,9))
a = sns.heatmap(corr, annot=True, fmt='.2f')

"""Bivariate Analysis

Price Analysis
"""

plt.rcParams['figure.figsize']=(35,10)
ax = sns.boxplot(x="Make", y="Price", data=df)

plt.rcParams['figure.figsize']=(19,7)
ax = sns.boxplot(x="Model", y="Price", data=df)

sns.catplot(data=df, x="Make", y="Price", hue="Type" ,kind="point")

plt.rcParams['figure.figsize']=(10,5)
ax = sns.boxplot(x="City_Mileage", y="Price", data=df)

sns.catplot(data=df, x="Cylinders", y="Power",kind="violin")

g = sns.pairplot(df[["Fuel_Tank_Capacity", "Displacement", "Price","Power","Make"]], hue="Make", diag_kind="hist")