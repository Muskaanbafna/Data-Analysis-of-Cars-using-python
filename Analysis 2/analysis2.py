# -*- coding: utf-8 -*-
"""Analysis2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JULkjdggCZIV3JmgPgEoYwRnyzQiUE6I

**Analysis 2**
"""

# Commented out IPython magic to ensure Python compatibility.
# imports
import numpy as np
import pandas as pd
pd.set_option('display.max_columns', 40)
import matplotlib.pyplot as plt
import matplotlib.gridspec as gridspec
import seaborn as sns
# %matplotlib inline
sns.set_style('darkgrid')
import plotly.express as px
from sklearn.cluster import KMeans
import warnings
warnings.filterwarnings('ignore');

df = pd.read_csv("CARSSSS.csv")
# to display the top 5 rows
df.head(5)

df.tail(5)

"""Checking the type of data"""

df.dtypes

"""Dropping the duplicate rows"""

duplicate_rows_df = df[df.duplicated()]
print("number of duplicate rows: ", duplicate_rows_df.shape)

df.count()   #used to count the number of rows

df = df.drop_duplicates()
df.head(5)

df.count()

"""Dropping the missing or null values"""

print(df.isnull().sum())

df = df.dropna()    # Dropping the missing values.
df.count()

print(df.isnull().sum())   # After dropping the values

"""**Converting the object values to integer type.**

While having a look at the data, the Price was stored as an object type. This is a serious problem because it is impossible to plot those values on a graph because it is a primary requirement that during plotting a graph all the values must be of type integer data. The author has stored, the Price in a different format (Rs2,34,000) so I had to remove the formatting and then convert them to an integer.
"""

# Removing the formatting
df['Price'] = df['Price'].astype(str)
df['Price'] = [x.replace('Rs',' ') for x in df['Price']]
df['Price'] = [x.replace(',', '') for x in df['Price']]

df['Price']=pd.to_numeric(df['Price'],errors='coerce')

"""**Detecting Outliers**

An outlier is a point or set of points different from other points. Sometimes they can be very high or very low. It’s often a good idea to detect and remove the outliers. Because outliers are one of the primary reasons for resulting in a less accurate model. Hence it’s a good idea to remove them. I will perform the IQR score technique to detect and remove the outliers. Often outliers can be seen with visualizations using a box plot. Shown below is the box plot of Price. In the plot, you can find some points are outside the box they are none other than outliers.
"""

sns.boxplot(x=df['Price'])

Q1 = df.quantile(0.25)
Q3 = df.quantile(0.75)
IQR = Q3 - Q1
print(IQR)

df = df[~((df < (Q1 - 1.5 * IQR)) |(df > (Q3 + 1.5 * IQR))).any(axis=1)]

sns.boxplot(x=df['Price'])

"""After using the technique now as seen above the Price box plot contains no outlier points.

**Histogram** 

Histogram refers to the frequency of occurrence of variables in an interval
"""

plt.figure(1)
plt.subplot(221)
df['Type'].value_counts(normalize=True).plot(figsize=(10,8),kind='bar',color='red')
plt.title("Number of Type frequency diagram")
plt.ylabel('Number of Type')
plt.xlabel('Type');

"""-More than 70 % of the vehicle is Manual type Car"""

plt.figure(1)
plt.subplot(221)
df['Make'].value_counts(normalize=True).plot(figsize=(10,8),kind='bar',color='red')
plt.title("Number of Cars by make frequency diagram")
plt.ylabel('Number of cars')
plt.xlabel('Make');

"""Most produced vehicle are of body style Maruti Suzuki around 165% followed by Toyota and hyundai 150%


"""

plt.figure(1)
plt.subplot(221)
df['Fuel_Type'].value_counts(normalize=True).plot(figsize=(10,8),kind='bar',color='red')
plt.title("Fuel type frequency diagram")
plt.ylabel('Number of cars')
plt.xlabel('Fuel type');

"""-More than 50 % of the vehicle is a Diesel type Car

**Box plot of Price of every body type**
"""

plt.figure(figsize=(12,12))
sns.boxplot(data=df, x='Price', y='Make', palette='viridis')
plt.title('Box plot of Price of every body type',fontsize=18)
plt.ylabel('')
plt.yticks(fontsize=18)
plt.xticks([i for i in range(0,800000,100000)],[f'{i:,}Rs.' for i in range(0,8000000,1000000)],fontsize=14);

"""It's Clear that Car body type strongly affect the price

**Performing a 5 number summary (min, lower quartile, median, upper quartile, max)**

Next step is to perform a 5-number summary for the numeric data. As discussed earlier the numeric data, in this case, are Price, Displacement, Cylinders, Fuel_Tank_Capacity,Height,length,width, Wheelbase,doors,seating_capacity. The five-number summary includes minimum, lower quartile, median, upper quartile, and the maximum values all these values can be obtained by using the describe method.
"""

df.describe()